import java.io.*;
import java.util.*;

import static java.time.chrono.JapaneseEra.values;

public class dictionaryHw {
  //Во всех задачах разбивайте решение на несколько коммитов:
  //
  //условие в комментарии и никакого кода
  //решение без учёта файлов - чтение с клавиатуры и вывод на экран
  //добавляем файлы, если они указаны в задаче
  //разбиваем задачу на методы
  //добавляем try..catch
  //Задача 1
  //Программисты, как вы уже знаете, постоянно учатся,
  // а в общении между собой используют весьма специфический язык.
  // Чтобы систематизировать ваш пополняющийся профессиональный лексикон,
  // мы придумали эту задачу.
  //
  //Напишите программу создания небольшого словаря сленговых программерских выражений,
  // чтобы она потом по запросу возвращала значения из этого словаря.
  //
  //Формат входных данных
  //Файл dict.txt
  //В первой строке задано одно целое число n — количество слов в словаре.
  //
  //В следующих n строках записаны слова и их определения,
  // разделенные двоеточием и символом пробела.
  //
  //Ввод с клавиатуры
  //В первой строке записано целое число m — количество поисковых слов,
  // чье определение нужно вывести.
  //
  //В следующих m строках записаны сами слова, по одному на строке.
  //
  //Формат выходных данных
  //Для каждого слова, независимо от регистра символов,
  // если оно присутствует в словаре, необходимо вывести на экран его определение.
  //
  //Если слова в словаре нет, программа должна вывести "Не найдено", без кавычек.
  //
  //Примечание 1
  //Мини-словарь для начинающих разработчиков можно посмотреть тут.
  //
  //Примечание 2
  //Гарантируется, что в определяемом слове или фразе отсутствует двоеточие (:),
  // следом за которым идёт пробел.
  //
  //Пример входных данных
  //5
  //Змея: язык программирования Python
  //Баг: от англ. bug — жучок, клоп, ошибка в программе
  //Конфа: конференция
  //Костыль: код, который нужен, чтобы исправить несовершенство ранее написанного кода
  //Бета: бета-версия, приложение на стадии публичного тестирования
  //3
  //Змея
  //Жаба
  //костыль
  //Пример выходных данных
  //язык программирования Python
  //Не найдено
  //код, который нужен, чтобы исправить несовершенство ранее написанного код
  public static void main(String[] args) throws IOException {
    BufferedReader wordReader = new BufferedReader(new InputStreamReader(System.in));
    BufferedReader dictionaryReader = new BufferedReader
        (new FileReader(".idea/res/dictionary.txt"));
    Map<String, String> dictionary = new HashMap<>();
    String name = String.valueOf(0);
    String value = String.valueOf(0);
    //читаем количество строк в словаре:
    int n = Integer.parseInt(dictionaryReader.readLine());
    //System.out.println(n);
    //читаем словарь и разбираем на слова и определения:
    for (int i = 1; i < n; ++i) { // прочитать n раз
      String line = dictionaryReader.readLine().toLowerCase(); // читаем строку.
      int spaceIndex = line.lastIndexOf(':'); // до первого двоеточия- слово ( выясняем индекс":").
      name = line.substring(0, spaceIndex); // отрезали "слово".
      value = line.substring(spaceIndex + 2); //  отрезали "определение".
      dictionary.put(name, value);//записали в словарь полученные значения
    }


    int m = Integer.parseInt(wordReader.readLine());
    int a = 0;
    List<String> words = new ArrayList<>();
    while (a < m) {
      String word = wordReader.readLine().toLowerCase();
      words.add(word);
      a++;
    }
    //System.out.println(Arrays.toString(new List[]{words}));

    int j = 0;
    while (j < m) {
      name = words.get(j);
      ++j;
      value = dictionary.get(name);
      if (value == null) {
        System.out.println("Не найдено");
      } else {
        System.out.println(value);

      }

      dictionaryReader.close();
    }
  }
}



